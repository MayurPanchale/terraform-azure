trigger: 
- main

stages:
- stage: Build
  jobs:
  - job: Build
    pool: default
      
    steps:
    - task: TerraformTaskV4@4
      displayName: 'tf init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'Azure subscription 1(87201664-84cc-4e7b-9327-fa20978ef9cc)'
        backendAzureRmResourceGroupName: 'demo-resources'
        backendAzureRmStorageAccountName: 'mvpstorage33'
        backendAzureRmContainerName: 'prod-tfstate'
        backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTaskV4@4
      displayName: 'tf validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
    - task: TerraformTaskV4@4
      displayName: 'tf fmt'
      inputs:
        provider: 'azurerm'
        command: 'custom'
        outputTo: 'console'
        customCommand: 'fmt'
        environmentServiceNameAzureRM: 'Azure subscription 1(87201664-84cc-4e7b-9327-fa20978ef9cc)'
    - task: TerraformTaskV4@4
      displayName: 'tf plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '-out $(Build.SourcesDirectory)/tfplanfile'
        environmentServiceNameAzureRM: 'Azure subscription 1(87201664-84cc-4e7b-9327-fa20978ef9cc)'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(Build.BuildId)-build'
        publishLocation: 'Container'